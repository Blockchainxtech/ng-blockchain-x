"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},l="Getting started",i={unversionedId:"intro",id:"intro",title:"Getting started",description:"Install npm package",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Web3 service",permalink:"/docs/category/web3-service"}},s={},p=[{value:"Install npm package",id:"install-npm-package",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started"},"Getting started"),(0,a.kt)("h3",{id:"install-npm-package"},"Install npm package"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"npm i ng-blockchainx\n")),(0,a.kt)("p",null,"If you are using Angular version >11 and run into an issue building. This is because polyfills are not included in the newest version of Angular."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install the required dependencies within your angular project:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev crypto-browserify next-tick stream-browserify assert stream-http https-browserify os-browserify\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Within ",(0,a.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," add the following ",(0,a.kt)("inlineCode",{parentName:"li"},"paths")," in ",(0,a.kt)("inlineCode",{parentName:"li"},"compilerOptions")," so Webpack can get the correct dependencies")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'{\n    "compilerOptions": {\n        "paths" : {\n        "crypto": ["./node_modules/crypto-browserify"],\n        "stream": ["./node_modules/stream-browserify"],\n        "assert": ["./node_modules/assert"],\n        "http": ["./node_modules/stream-http"],\n        "https": ["./node_modules/https-browserify"],\n        "os": ["./node_modules/os-browserify"],\n    }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add the following lines to ",(0,a.kt)("inlineCode",{parentName:"li"},"polyfills.ts")," file:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Buffer } from 'buffer';\n\n(window as any).global = window;\nglobal.Buffer = Buffer;\nglobal.process = {\n    env: { DEBUG: undefined },\n    version: '',\n    nextTick: require('next-tick')\n} as any;\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create webpack.config.js file on root path and add below code ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'\n{\n    resolve: {\n        fallback: {\n            url: require.resolve("url/")\n        }\n    }\n}\n\n')),(0,a.kt)("p",null,"after run npm install url"),(0,a.kt)("p",null,"Once above setup done stop and start the angular project. If compilation success start integrating the services."))}u.isMDXComponent=!0}}]);